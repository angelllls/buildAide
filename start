
	我需要一个能够实现自动化和简化我工作的东西，因为它可以让我更好的实现梦想。
	我需要自动化就需要处理事情的东西，现今电子发展最快，而电子处理器又非常的不错，这些都需要花费时间区了解的，而处理器中arm、intel(x86,x64)构架我学习过，需要了解他们在到如何利用他们。首先它是通过语言来来控制，具体是将语言编译成可执行文件->将这个文件放到机器识别的地方，有时候我们需要一些工具辅助我们将文件复制到机器上(改变机器记忆构架)。编译需要用到编译器，我选择了linux平台上的gcc编译，只要参数正确，我们可以得到arm构架(arm只是构架，具体处理器都有些不同)的执行文件，通过一些工具和传输的方式“烧录”
芯片，我在ubuntu上的stlink来完成stlink传输。当然我工作的机器就是处理的系统，是x64构架的，编译也是gcc。linux是一个值得学习的对象，我的印象是，它有完善的系统输出输入控制，将基本的命令系统性的形成组合，他们先后的完成自己的任务，它们的行为形成了新的命令，这个命令叫做调用，学linux需要学到c语言，linux系统是内存管理，文件系统，输入输出，机器完成了对他们基本布局后，linux会已被动的方式(中断除外)等待执行顺序调用它们。c语言接近用户的思维，这样工作起来就会不累，不过有时候at&t语言更好被阅读，一个是看整体，一个是看细节，at&t(gnu gas语言，asm是intel的)接近了机器语言，只差编译这一步，c可以通过：
	gcc -S name.C -o name.s
这样at&t的语言跟机器与语言的顺序是一致的，编译：
	gcc name.c
	gcc name.s
就行成了可执行文件 name.o 
这是正常情况，有时候你需要链接，多个文件的时候，就需要链接获取真的地址（调用都是通过访问地址的）。如果你在arm上运行，还需要加上指定构架的参数，因为不同的构架之间，指令和寄存器都完全不同，有事不同的厂商产的芯片，访问的开始内存都不同的，总之厂商都会在网上提供一些芯片的手册。
	这些可以让做的事情不需要那么麻烦，它可以让你做不到的事情能够实现，在几秒之间。不过这些都是建立在你有芯片的情况下的，包括你使用基本电子元件完成你自己的想法，如果可以不以来他们就会更好，当然在你不沉湎在成果上，他们的东西可以使你更快的完成自己的进步，不衣赖别人。
	你要创造，就需要了解这个世界，金属，人体，人性，所有，包括你不能看到的，我们可以通过事先编译好的东西让我们不需要杀死那么过脑细胞，这个东西需要容易了解，而且容易上手，时间，空间，物质，自我， 我们对这个世界很陌生，我写下了这些或许命意注定，我的努力是我不确定的表现，正如我在纸上画下壮志宏图，你可以说我是注定，也可以说我是不确定的。
	事物是系统的，系统的反应通常都不会是全面的，你获得的信息是系统的一面，事物随着时间会发生改变，我们可以找到变化的规律，事物包含的关系，我们可以推理，
	
辅助类:
1.模拟:
	电路原理
	光学原理
	力学
	法则
	液体气体
2.设计:
	电路，pcb
	asic
	c，java..
	机械
	光学器件
3.生成:
	pcb板的实现
	半导体制作
	磨具
4.测试收集信息
	
5.查阅:
	数据库



